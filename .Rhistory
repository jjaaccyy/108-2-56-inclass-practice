entranceYears <- 100:103
# 三系對100-103學年入學學生的四個年級課程規劃
# 針對entranceYears裡每一個元素一一代到get_course函數
# 求得經濟系100-103入學年學生的系課程規劃科目種類
entranceYears %>%
map(~get_courses(.x, major[[1]])) ->
list_major1_allYears # 經濟系
majors <- c("經濟系","社學系","社工系")
entranceYears <- 100:103
# 三系對100-103學年入學學生的四個年級課程規劃
# 針對entranceYears裡每一個元素一一代到get_course函數
# 求得經濟系100-103入學年學生的系課程規劃科目種類
entranceYears %>%
map(~get_courses(.x, major[[1]])) ->
list_major1_allYears # 經濟系
majors <- c("經濟系","社學系","社工系")
entranceYears <- 100:103
# 三系對100-103學年入學學生的四個年級課程規劃
# 針對entranceYears裡每一個元素一一代到get_course函數
# 求得經濟系100-103入學年學生的系課程規劃科目種類
entranceYears %>%
map(~get_courses(.x, major[[1]])) ->
list_major1_allYears # 經濟系
majors <- c("經濟系","社學系","社工系")
entranceYears <- 100:103
# 三系對100-103學年入學學生的四個年級課程規劃
# 針對entranceYears裡每一個元素一一代到get_course函數
# 求得經濟系100-103入學年學生的系課程規劃科目種類
entranceYears %>%
map(~get_courses(.x, major[[1]])) ->
list_major1_allYears # 經濟系
majors <- c("經濟系","社學系","社工系")
entranceYears <- 100:103
# 三系對100-103學年入學學生的四個年級課程規劃
# 針對entranceYears裡每一個元素一一代到get_course函數
# 求得經濟系100-103入學年學生的系課程規劃科目種類
entranceYears %>%
map(~get_courses(.x, majors[[1]])) ->
list_major1_allYears # 經濟系
# 針對entranceYears裡每一個元素一一代到get_course函數
# 求得社會系100-103入學年學生的系課程規劃科目種類
entranceYears %>%
map(~get_courses(.x, majors[[2]])) ->
list_major2_allYears # 社會系
# 針對entranceYears裡每一個元素一一代到get_course函數
# 求得社工系100-103入學年學生的系課程規劃科目種類
entranceYears %>%
map(~get_courses(.x, majors[[3]])) ->
list_major3_allYears # 社工系
str(list_major1_allYears)
library(lubridate)
chart <- list(
`雙` = c(1,3,5,7),
`單` = c(1,2,4,6)
)
chart[[odd_or_even(Mask$`身分證字號`[[1]])+1]]
if(wday(today())) %in%
library(lubridate)
chart <- list(
`雙` = c(1,3,5,7),
`單` = c(1,2,4,6)
)
chart[[odd_or_even(Mask$`身分證字號`[[1]])+1]]
if(wday(today()) %in%
chart[[odd_or_even(Mask$`身分證字號`[[1]])+1]]){today()}
else{today()+1} -> `1st_next_date`
library(lubridate)
chart <- list(
`雙` = c(1,3,5,7),
`單` = c(1,2,4,6)
)
chart[[odd_or_even(Mask$`身分證字號`[[1]])+1]]
if(wday(today()) %in%
chart[[odd_or_even(Mask$`身分證字號`[[1]])+1]]){today()}
else {today()+1} -> `1st_next_date`
library(lubridate)
chart <- list(
`雙` = c(1,3,5,7),
`單` = c(1,2,4,6)
)
chart[[odd_or_even(Mask$`身分證字號`[[1]])+1]]
if(wday(today()) %in%
chart[[odd_or_even(Mask$`身分證字號`[[1]])+1]]){
today()} else {today()+1} -> `1st_next_date`
`1st_next_date`
get_coursesAllYears <- function(entranceYears, major){
# 可以針對「單一」major系對entranceYears裡不同入學年一一求算該系對該入學年學生的系課程規劃科目種類
entranceYears %>%
map(~get_courses(entranceYear, major)) ->
list_major1_allYears
return(list_major1_allYears)
}
# 一一將majors裡的系取出進行get_coursesAllYears運算以得到「取出系」在不同entranceYears入學年下的系課程規劃。
majors %>%
map(~get_coursesAllYears(entranceYears, major)) -> list_coursesAllMajorsAllYears
get_coursesAllYears <- function(entranceYears, major){
# 可以針對「單一」major系對entranceYears裡不同入學年一一求算該系對該入學年學生的系課程規劃科目種類
entranceYears %>%
map(~get_courses(.x, major)) ->
list_major1_allYears
return(list_major1_allYears)
}
# 一一將majors裡的系取出進行get_coursesAllYears運算以得到「取出系」在不同entranceYears入學年下的系課程規劃。
majors %>%
map(~get_coursesAllYears(entranceYears, .x)) -> list_coursesAllMajorsAllYears
get_coursesAllYears(100,"經濟系")
get_coursesAllYears(100,"經濟系")[[1]]
get_coursesAllYears(100,"經濟系")[[1]][[1]]
knitr::opts_chunk$set(echo = F, eval=F)
library(readr); library(stringr); library(purrr); library(magrittr); library(lubridate); library(jsonlite)
fromJSON("https://data.ntpc.gov.tw/api/datasets/C3FFC733-C2E3-42C6-9C14-CDDDDF3D2AEC/json/preview") -> ntpc_building_info
str(ntpc_building_info)
print(ntpc_building_info)
knitr::opts_chunk$set(echo = F, eval=F)
library(readr); library(stringr); library(purrr); library(magrittr); library(lubridate)
data.frame(
weekday = str_c("星期",c("天","一","二","三","四","五","六")),
number = c(1:7)
) -> weekday_chart
str(weekday_chart)
data.frame(type=c(rep("公共空間",each=4)),
floer=c("B4","B3","B2","B1"),
name=c("員工汽車停車場","員工汽車停車場","公務汽車停車場","來賓停車場"),name_en=c("Employee Car Parking","Employee Car Parking","Offical Car Parking","V.I.P Parking Lot"))
data.frame(type=c(rep("公共空間",each=4)),
floer=c("B4","B3","B2","B1"),
name=c("員工汽車停車場","員工汽車停車場","公務汽車停車場","來賓停車場"),name_en=c("Employee Car Parking","Employee Car Parking","Offical Car Parking","V.I.P Parking Lot"))
-> ntpc_building_parking
data.frame(type=c(rep("公共空間",each=4)),
floer=c("B4","B3","B2","B1"),
name=c("員工汽車停車場","員工汽車停車場","公務汽車停車場","來賓停車場"),name_en=c("Employee Car Parking","Employee Car Parking","Offical Car Parking","V.I.P Parking Lot")) -> ntpc_building_parking
print(ntpc_building_parking)
readline(prompt = "輸入關鍵字") -> key_word
knitr::opts_chunk$set(echo = F, eval=F)
library(readr); library(stringr); library(purrr); library(magrittr); library(lubridate); library(jsonlite)
readline(prompt = "輸入關鍵字") -> key_word
no_found <- function(key_word){
if(str_detect(ntpc_building_info$name,key_word,negate=T) )
{warning("No Found")}
}
no_found
readline(prompt = "輸入關鍵字") -> key_word
no_found <- function(key_word){
if(str_detect(ntpc_building_info$name,key_word,negate=T) )
{warning("No Found")}
}
#no_found
knitr::opts_chunk$set(echo = F, eval=F)
library(readr); library(stringr); library(purrr); library(magrittr); library(lubridate)
# 先執行此行輸入學號
readline(prompt = "請輸入你的學號") -> studentId
# readline一行也可改用以下取代。
# rstudioapi::showPrompt(title="學號驗證",message="請輸入你的學號") -> studentId
# 之後才執行以下程式
if(
str_detect(studentId,'^[43](1[01][0-9]|9[0-9])[0-9]{5}$',negate=T) # condition: 是否輸入學號正確？
) {
warning("你所輸入的學號不正確")
}
readline(prompt = "輸入關鍵字") -> key_word
no_found <- function(key_word){
if(str_detect(ntpc_building_info$name,key_word,negate=T) )
{warning("No Found")}
}
#no_found
readline(prompt = "輸入關鍵字") -> key_word
no_found <- function(key_word){
if(str_detect(ntpc_building_info$name,key_word,negate=T) )
{warning("No Found")}
}
no_found
readline(prompt = "輸入關鍵字") -> key_word
search_engine <- function(key_word){if(str_detect(ntpc_building_info$name,key_word)){print(ntpc_building_info)}
else{warning("No Found")}
}
# search_engine
readline(prompt = "輸入關鍵字") -> key_word
search_engine <- function(key_word){if(str_detect(ntpc_building_info$name,key_word)){print(ntpc_building_info)}
else{warning("No Found")}
}
search_engine
readline(prompt = "輸入關鍵字") -> key_word
no_found <- function(key_word){
if(str_detect(key_word,ntpc_building_info$name,negate=T) )
{warning("No Found")}
}
no_found
readline(prompt = "輸入關鍵字") -> key_word
no_found <- function(key_word){
if(str_detect(key_word,ntpc_building_info$name,negate=T) )
{warning("No Found")}
}
#no_found
readline(prompt = "輸入關鍵字") -> key_word
no_found <- function(key_word){
if(str_detect(key_word,ntpc_building_info$name[[1:30]],negate=T) )
{warning("No Found")}
}
#no_found
ntpc_building_info$name
as.character(ntpc_building_info$name)
as.character(ntpc_building_info$name) -> cha_name
readline(prompt = "輸入關鍵字") -> key_word
no_found <- function(key_word){
if(str_detect(key_word,cha_name,negate=T) )
{warning("No Found")}
}
#no_found
as.character(ntpc_building_info$name) -> cha_name
readline(prompt = "輸入關鍵字") -> key_word
no_found <- function(key_word){
if(str_detect(key_word,cha_name,negate=T) )
{warning("No Found")}
}
class(cha_name)
as.character(ntpc_building_info$name) -> cha_name
readline(prompt = "輸入關鍵字") -> key_word
no_found <-
if(str_detect(cha_name,key_word,negate=T) )
{warning("No Found")}
read_csv("https://www.dropbox.com/s/8mlf6cory32q1eq/bear.csv?dl=1") ->
bear
print(bear)
print(bear)
as.character(ntpc_building_info$name) -> cha_name
readline(prompt = "輸入關鍵字") -> key_word
no_found <-
if(str_detect(cha_name[[1:30]],key_word,negate=T) )
{warning("No Found")}
as.character(ntpc_building_info$name) -> cha_name
readline(prompt = "輸入關鍵字") -> key_word
no_found <-
if(str_detect(any(cha_name),key_word,negate=T) )
{warning("No Found")}
read_csv("https://www.dropbox.com/s/8mlf6cory32q1eq/bear.csv?dl=1") ->
bear[3,3]
bear[3,3]
print(bear)
read_csv("https://www.dropbox.com/s/8mlf6cory32q1eq/bear.csv?dl=1") ->
bear[6,]
bear[6,]
bear[5,5]
bear[1,5]
read_csv("https://www.dropbox.com/s/8mlf6cory32q1eq/bear.csv?dl=1") ->
bear
print(bear)
read_csv("https://www.dropbox.com/s/8mlf6cory32q1eq/bear.csv?dl=1") ->
bear
print(bear)
bear[6,]
read_csv("https://www.dropbox.com/s/8mlf6cory32q1eq/bear.csv?dl=1") ->
bear
print(bear)
bear[7,]
best_choice <- function(choice){
if(choice>6){print("多消費蛋糕、少消費甜甜圈")}
else if (choice<6){print("少消費蛋糕、多消費甜甜圈")}
else{print("維持現有消費組合")}
}
# best_choice
best_choice <- function(choice){
if(choice>6){print("多消費蛋糕、少消費甜甜圈")}
else if (choice<6){print("少消費蛋糕、多消費甜甜圈")}
else{print("維持現有消費組合")}
}
best_choice(bear[6,])
# best_choice
bear[7,]
best_choice <- function(choice){
if(choice>6){print("多消費蛋糕、少消費甜甜圈")}
else if (choice<6){print("少消費蛋糕、多消費甜甜圈")}
else{print("維持現有消費組合")}
}
best_choice(bear[6,])
# best_choice
best_choice <- function(choice){
if(choice>6){print("多消費蛋糕、少消費甜甜圈")}
else if (choice<6){print("少消費蛋糕、多消費甜甜圈")}
else{print("維持現有消費組合")}
}
best_choice(6)
# best_choice
best_choice <- function(bear[choice,]){
bear[6,]
choice <- bear[choice,]
best_choice <- function(choice){
choice <- bear[choice,]
if(choice>30){print("多消費蛋糕、少消費甜甜圈")}
else if (choice<30){print("少消費蛋糕、多消費甜甜圈")}
else{print("維持現有消費組合")}
}
# best_choice
best_choice <- function(choice){
choice <- bear[choice,]
if(choice>30){print("多消費蛋糕、少消費甜甜圈")}
else if (choice<30){print("少消費蛋糕、多消費甜甜圈")}
else{print("維持現有消費組合")}
}
best_choice(bear[6,])
readline(prompt = "輸入關鍵字") -> key_word
no_found <-
if(str_detect(ntpc_building_info$name,key_word,negate = T) )
{warning("No Found")}
# 先執行此行輸入學號
readline(prompt = "請輸入你的學號") -> studentId
# readline一行也可改用以下取代。
# rstudioapi::showPrompt(title="學號驗證",message="請輸入你的學號") -> studentId
# 之後才執行以下程式
if(
str_detect(studentId,'^[43](1[01][0-9]|9[0-9])[0-9]{5}$',negate=T) # condition: 是否輸入學號正確？
) {
warning("你所輸入的學號不正確")
}
readline(prompt = "輸入關鍵字") -> key_word
no_found <- if(str_detect(ntpc_building_info$name,key_word,negate = T) )
{warning("No Found")}
ntpc_building_info$name
class(ntpc_building_info$name)
length(ntpc_building_info$name)
readline(prompt = "輸入關鍵字") -> key_word
map(1:30,str_detect(ntpc_building_info$name[[.x]],key_word))
readline(prompt = "輸入關鍵字") -> key_word
ntpc_building_info$name -> namelist
map(1:30,namelist(str_detect(namelist[[.x]],key_word)))
readline(prompt = "輸入關鍵字") -> key_word
ntpc_building_info$name -> namelist
map(1:30,namelist(str_detect(namelist[[.x]],key_word)))
readline(prompt = "輸入關鍵字") -> key_word
ntpc_building_info$name -> namelist
map(1:30,namelist[str_detect(namelist[[.x]],key_word)])
readline(prompt = "輸入關鍵字") -> key_word
ntpc_building_info$name -> namelist
map(1:30,~namelist[str_detect(namelist[[.x]],key_word)])
readline(prompt = "輸入關鍵字") -> key_word
ntpc_building_info$name -> namelist
map_chr(1:30,~namelist[str_detect(namelist[[.x]],key_word)])
readline(prompt = "輸入關鍵字") -> key_word
ntpc_building_info$name -> namelist
map(1:30,~namelist[str_detect(namelist[[.x]],key_word)])
readline(prompt = "輸入關鍵字") -> key_word
ntpc_building_info$name -> namelist
map(1:30,~namelist[[.x]][str_detect(namelist[[.x]],key_word)])
readline(prompt = "輸入關鍵字") -> key_word
ntpc_building_info$name -> namelist
map_chr(1:30,~namelist[[.x]][str_detect(namelist[[.x]],key_word)])
bear[5,]
print(bear)
class(bear[6,])
read_csv("https://www.dropbox.com/s/8mlf6cory32q1eq/bear.csv?dl=1") ->
bear
print(bear)
str(bear)
best_choice <- function(choice){
if(choice>5){print("多消費蛋糕、少消費甜甜圈")}
else if (choice<5){print("少消費蛋糕、多消費甜甜圈")}
else{print("維持現有消費組合")}
}
best_choice(bear[6,])
# best_choice
best_choice <- function(choice){
if(choice>5){print("多消費蛋糕、少消費甜甜圈")}
else if (choice<5){print("少消費蛋糕、多消費甜甜圈")}
else{print("維持現有消費組合")}
}
best_choice(bear[6,])
# best_choice
best_choice <- function(choice){
if(choice>5){print("多消費蛋糕、少消費甜甜圈")}
else if (choice<5){print("少消費蛋糕、多消費甜甜圈")}
else{print("維持現有消費組合")}
}
best_choice(bear[1,])
# best_choice
print(bear)
bear[6,]
choice <- map(1:11,~bear[.x,])
choice
choice <- map(1:11,~bear[.x,])
choice
choice <- map(1:11,~bear[.x,])
best_choice <- function(choice){
if(choice == choice[7:11]){print("多消費蛋糕、少消費甜甜圈")}
else if (choice == choice[1:5]){print("少消費蛋糕、多消費甜甜圈")}
else{print("維持現有消費組合")}
}
best_choice(bear[1,])
bear[1,]
choice[[1]]
choice[[1:2]]
choice[1:2]
bear[1,]
choice[[1]]
choice <- map_chr(1:11,~bear[.x,])
choice <- map(1:11,~bear[.x,])
best_choice <- function(choice){
if(choice == choice[7:11]){print("多消費蛋糕、少消費甜甜圈")}
else if (choice == choice[1:5]){print("少消費蛋糕、多消費甜甜圈")}
else{print("維持現有消費組合")}
}
best_choice(bear[1,])
choice <- map(1:11,~bear[.x,])
best_choice <- function(choice){
if(choice == choice[7:11]){print("多消費蛋糕、少消費甜甜圈")}
else if (choice == choice[1:5]){print("少消費蛋糕、多消費甜甜圈")}
else{print("維持現有消費組合")}
}
best_choice(choice[1])
readline(prompt = "輸入關鍵字") -> key_word
as.character(ntpc_building_info$name)-> ntpc_building_info$name
no_found <- function(key_word) {if(any(str_detect(ntpc_building_info$name,key_word)) == T)
{print(ntpc_building_info$name[str_detect(ntpc_building_info$name,key_word)])}
else{warning("No Found")}
}
no_found(key_word)
readline(prompt = "輸入關鍵字") -> key_word
as.character(ntpc_building_info$name)-> ntpc_building_info$name
no_found <- function(key_word) {if(any(str_detect(ntpc_building_info$name,key_word)) == T)
{print(ntpc_building_info$name[str_detect(ntpc_building_info$name,key_word)])}
else{warning("No Found")}
}
no_found(key_word)
readline(prompt = "輸入關鍵字") -> key_word
as.character(ntpc_building_info$name)-> ntpc_building_info$name
no_found <- function(key_word) {if(str_detect(ntpc_building_info$name,key_word) == T)
{print(ntpc_building_info$name[str_detect(ntpc_building_info$name,key_word)])}
else{warning("No Found")}
}
no_found(key_word)
readline(prompt = "輸入關鍵字") -> key_word
as.character(ntpc_building_info$name)-> ntpc_building_info$name
no_found <- function(key_word) {if(any(str_detect(ntpc_building_info$name,key_word)) == T)
{print(ntpc_building_info$name[str_detect(ntpc_building_info$name,key_word)])}
else{warning("No Found")}
}
no_found(key_word)
readline(prompt = "輸入關鍵字") -> key_word
as.character(ntpc_building_info$name)-> ntpc_building_info$name
no_found <- function(key_word) {if(any(str_detect(ntpc_building_info$name,key_word)) == T)
{print(ntpc_building_info$name[str_detect(ntpc_building_info$name,key_word)])}
else{warning("No Found")}
}
no_found(key_word)
readline(prompt = "輸入關鍵字") -> key_word
as.character(ntpc_building_info$name)-> ntpc_building_info$name
no_found <- function(key_word) {if(any(str_detect(ntpc_building_info$name,key_word)) == T)
{print(ntpc_building_info$name[str_detect(ntpc_building_info$name,key_word)])}
else{warning("No Found")}
}
no_found(key_word)
readline(prompt = "輸入關鍵字") -> key_word
search_engine <- function(key_word) {if(any(str_detect(ntpc_building_info$name,key_word)) == T)
{str_detect(ntpc_building_info$name,key_word) -> pick
map(ntpc_building_info, ~{.x[pick]})}
else{warning("No Found")}
}
search_engine(key_word)
#search_engine
readline(prompt = "輸入關鍵字") -> key_word
search_engine <- function(key_word) {if(any(str_detect(ntpc_building_info$name,key_word)) == T)
{str_detect(ntpc_building_info$name,key_word) -> pick
map(ntpc_building_info, ~{.x[pick]})}
else{warning("No Found")}
}
search_engine(key_word)
#search_engine
bear[6,]$`蛋糕(Q1)`
bear[6,]$`蛋糕(Q1)`
map(1:11,~bear[.x,]$`蛋糕(Q1)`)
map_int(1:11,~bear[.x,]$`蛋糕(Q1)`)
map_num(1:11,~bear[.x,]$`蛋糕(Q1)`)
map_int(1:11,~bear[.x,]$`蛋糕(Q1)`)
map_chr(1:11,~bear[.x,]$`蛋糕(Q1)`)
map_int(1:11,~bear[.x,]$`蛋糕(Q1)`)
map_chr(1:11,~bear[.x,]$`蛋糕(Q1)`)
map(1:11,~bear[.x,]$`蛋糕(Q1)`) -> bear
bear
bear[6,]
View(bear)
View(bear)
read_csv("https://www.dropbox.com/s/8mlf6cory32q1eq/bear.csv?dl=1") ->
bear
print(bear)
str(bear)
unlist(map(1:11,~bear[.x,]$`蛋糕(Q1)`))
best_choice <- function(choice){
choice <- unlist(map(1:11,~bear[.x,]$`蛋糕(Q1)`))
if(choice<5){print("多消費蛋糕、少消費甜甜圈")}
else if (choice>5){print("少消費蛋糕、多消費甜甜圈")}
else{print("維持現有消費組合")}
}
best_choice(bear[6,])
# best_choice
bear[6,]
choice
choice <- unlist(map(1:11,~bear[.x,]$`蛋糕(Q1)`))
choice
choice[[1]] <- bear[1,]
browseURL("https://docs.google.com/spreadsheets/d/1bdb4XPEwrQByujQ79PeQ5D0V_157ouRrRVDiA9cs3B0/edit#gid=0")
# 先產生list of 7
seatingChart <- vector("list",7)
names(seatingChart) <- paste0("row",1:7) # 命名7個row
# 產生每個row模版
seatNames_in_a_row <-
c("7","5","A1","3","1","2","4","A2","6")
seatValues_in_a_row <- rep(0L,9)
names(seatValues_in_a_row) <- seatNames_in_a_row
seatValues_in_a_row[c("A1","A2")] <- -1L
for(.x in seq_along(seatingChart)){
seatingChart[[.x]] <- seatValues_in_a_row
}
# seatingChart
seat_rowNames <- names(seatingChart)
seatNames_in_a_row <- names(seatingChart$row1)
