)
"全天" -> garbageRoutes$time[is.na(garbageRoutes$time)]
garbageRoutes$time <- factor(garbageRoutes$time)
levels(garbageRoutes)
garbageRoutes$time <- stringr::str_extract(garbageRoutes$linename,"(?<=路線)[:graph:]+"
)
"全天" -> garbageRoutes$time[is.na(garbageRoutes$time)]
garbageRoutes$time <- factor(garbageRoutes$time)
levels(garbageRoutes$time)
levels(garbageRoutes$time)[[3]] <- c("下午")
pattern2 <- paste0("段(譽|兄|兄弟|大哥|相公|君)","(?!弟)","|姓段的小子")
str_extract_all(context_picked_split[[1]],pattern2) -> mention_duan
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr);
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
str(studentHeights)
str(studentHeights)
str(studentHeights)
studentHeights$學年度
# studentHeights
```
factor(studentHeights$學年度)
levels(factor_year)
pick_violation <- table_countsByArticle >= max(table_countsByArticle)
factor(studentHeights$學年度) -> factor_year
levels(factor_year)
str(studentHeights)
factor(studentHeights$學年度) -> factor_year
levels(factor_year) <- levels(factor_year)[5,6,7,8,9,10,11,1,2,3,4]
studentHeights$學年度
str(studentHeights)
factor_year <- factor(studentHeights$`學年度`)
levels_year <- levels(factor_year)[5,6,7,8,9,10,11,1,2,3,4]
studentHeights$`學年度` <- factor(factor_year,levels_year)
pattern2 <- paste0("段(譽|兄|兄弟|大哥|相公|君)","(?!弟)","|姓段的小子")
str_extract_all(context_picked_split[[1]],pattern2) -> mention_duan
read_csv("https://www.dropbox.com/s/xjzg1iuuws7tcha/table.csv?dl=1") -> table
source("https://www.dropbox.com/s/5oy56om4q0857tt/student10.R?dl=1",encoding = "UTF-8")
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr)
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
{r echo= T , result='hide'}
str(studentHeights$學年度)
factor(studentHeights$`學年度`,ordered=T) -> studentHeights$`學年度`
studentHeights$`學年度`
levels(studentHeights$`學年度`)[5,6,7,8,9,10,11,1,2,3,4] -> levelsyear
levelsyea
levels(studentHeights$`學年度`)[5,6,7,8,9,10,11,1,2,3,4] -> levelsyear
levelsyear
levels(studentHeights$`學年度`)[c(5,6,7,8,9,10,11,1,2,3,4)] -> levelsyear
levelsyear
factor(studentHeights$`學年度`,ordered=T) -> studentHeights$`學年度`
levels(studentHeights$`學年度`)
levelsyear
levels(studentHeights$`學年度`)
as.integer(levels(studentHeights$`學年度`)) -> levelsyear
sort(levelsyear) -> levelsyear
levelsyear
as.character(levelsyear) -> levelsyear
studentHeights$`學年度` <- factor(studentHeights$`學年度`,levelsyear)
studentHeights$`學年度`
studentHeights$`年齡`
factor(studentHeights$`年齡`) -> studentHeights$`年齡`
as.integer(levels(studentHeights$`年齡`)) -> levelsold
sort(levelsold) -> levelsold
as.character(levelsold) -> levelsold
studentHeights$`學年度` <- factor(studentHeights$`學年度`,levelsold)
studentHeights$`年齡`
factor(studentHeights$`年齡`,ordered = T) -> studentHeights$`年齡`
as.integer(levels(studentHeights$`年齡`)) -> levelsold
sort(levelsold) -> levelsold
as.character(levelsold) -> levelsold
studentHeights$`學年度` <- factor(studentHeights$`學年度`,levelsold)
studentHeights$`年齡`
sort(levelsold) -> levelsold
levelsold
sort(levelsold)
factor(studentHeights$`年齡`,ordered = T) -> studentHeights$`年齡`
as.integer(levels(studentHeights$`年齡`)) -> levelsold
sort(levelsold) -> levelsold
levelsold
factor(studentHeights$`年齡`,ordered = T) -> studentHeights$`年齡`
as.integer(levels(studentHeights$`年齡`)) -> levelsold
sort(levelsold) -> levelsold
levelsold
as.character(levelsold) -> levelsold
studentHeights$`學年度` <- factor(studentHeights$`學年度`,levelsold)
studentHeights$`年齡`
factor(studentHeights$`年齡`,ordered = T) -> studentHeights$`年齡`
as.integer(levels(studentHeights$`年齡`)) -> levelsold
sort(levelsold) -> levelsold
levelsold
as.character(levelsold) -> levelsold
studentHeights$`年齡` <- factor(studentHeights$`年齡`,levelsold)
studentHeights$`年齡`
factor(studentHeights$`年齡層`) -> studentHeights$`年齡層`
studentHeights$年齡層
# studentHeights$`年齡層`
```
studentHeights$`年齡層`
levels(studentHeights$`年齡層`)
factor(studentHeights$`年齡層`) -> studentHeights$`年齡層`
levels(studentHeights$`年齡層`)[c(3,1,2)] -> newslevel
newslevel
str_extract( studentHeights$`年齡層`,"^[0-9]+")
str_extract( levels(studentHeights$`年齡層`),"^[0-9]+")
factor(studentHeights$`年齡層`,ordered=T) -> studentHeights$`年齡層`
levels(studentHeights$`年齡層`) -> oldlevel
str_extract( levels(studentHeights$`年齡層`),"^[0-9]+") -> levelsolded
as.integer(levelsolded) -> levelsolded
names(levelsolded) <- oldlevel
sort(oldlevel) -> oldlevel
studentHeights$`年齡層` <- factor(studentHeights$`年齡層`,oldlevel)
studentHeights$`年齡層`
factor(studentHeights$`年齡層`,ordered=T) -> studentHeights$`年齡層`
levels(studentHeights$`年齡層`) -> oldlevel
str_extract( levels(studentHeights$`年齡層`),"^[0-9]+") -> levelsolded
as.integer(levelsolded) -> levelsolded
names(levelsolded) <- oldlevel
sort(oldlevel) -> oldlevel
oldlevel
factor(studentHeights$`年齡層`,ordered=T) -> studentHeights$`年齡層`
factor(studentHeights$`年齡層`,ordered=T) -> studentHeights$`年齡層`
levels(studentHeights$`年齡層`) -> oldlevel
oldlevel
str_extract(oldlevel,"^[0-9]+") -> levelsolded
levelsolded
as.integer(levelsolded) -> levelsolded
levelsolded
names(levelsolded) <- oldlevel
levelsolded
sort(oldlevel) -> oldlevel
oldlevel
sort(levelsolded) -> levelsolded
oldlevel
sort(levelsolded) -> levelsolded
levelsolded
factor(studentHeights$`年齡層`,ordered=T) -> studentHeights$`年齡層`
levels(studentHeights$`年齡層`) -> oldlevel
oldlevel
str_extract(oldlevel,"^[0-9]+") -> levelsolded
as.integer(levelsolded) -> levelsolded
names(levelsolded) <- oldlevel
sort(levelsolded) -> levelsolded
studentHeights$`年齡層` <- factor(studentHeights$`年齡層`,names(levelsolded))
studentHeights$`年齡層`
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr);
factor(studentHeights$`學年度`,ordered=T) -> studentHeights$`學年度`
as.integer(levels(studentHeights$`學年度`)) -> levelsyear
sort(levelsyear) -> levelsyear
as.character(levelsyear) -> levelsyear
studentHeights$`學年度` <- factor(studentHeights$`學年度`,levelsyear)
studentHeights$學年度
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr);
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
factor(studentHeights$`學年度`,ordered=T) -> studentHeights$`學年度`
as.integer(levels(studentHeights$`學年度`)) -> levelsyear
sort(levelsyear) -> levelsyear
as.character(levelsyear) -> levelsyear
studentHeights$`學年度` <- factor(studentHeights$`學年度`,levelsyear)
factor(studentHeights$`年齡`,ordered = T) -> studentHeights$`年齡`
as.integer(levels(studentHeights$`年齡`)) -> levelsold
sort(levelsold) -> levelsold
levelsold
as.character(levelsold) -> levelsold
studentHeights$`年齡` <- factor(studentHeights$`年齡`,levelsold)
studentHeights$`年齡`
studentHeights
studentHeights$`學年度`
factor(studentHeights$`年齡層`,ordered=T) -> studentHeights$`年齡層`
levels(studentHeights$`年齡層`) -> oldlevel
oldlevel
str_extract(oldlevel,"^[0-9]+") -> levelsolded
as.integer(levelsolded) -> levelsolded
names(levelsolded) <- oldlevel
sort(levelsolded) -> levelsolded
studentHeights$`年齡層` <- factor(studentHeights$`年齡層`,names(levelsolded))
studentHeights$`年齡層`
View(studentHeights)
pick_68 <- studentHeights$`年齡層`["6-8"]
pick_68
# averageHeightByGroup
pick_68 <- studentHeights$`年齡層`["6-8"]
pick_68
# averageHeightByGroup
pick_68 <- studentHeights$`年齡層`<="6-8"
pick_68
# averageHeightByGroup
pick_68 <- studentHeights$`年齡層`=="6-8"
pick_68
# averageHeightByGroup
pick_68 <- studentHeights$`年齡層`=="6-8"
pick_912 <- studentHeights$`年齡層` == "9-12"
pick_1315 <- studentHeights$`年齡層` == "13-15"
averageHeightByGroup <- c(mean(studentHeights$`平均身高`[pick_68]),
mean(studentHeights$`平均身高`[pick_912]),
mean(studentHeights$`平均身高`[pick_1315])
)
averageHeightByGroup
class(averageHeightByGroup)
lengh(averageHeightByGroup)
lengh(averageHeightByGroup)
length(averageHeightByGroup)
pick_68 <- studentHeights$`年齡層`=="6-8"
pick_912 <- studentHeights$`年齡層` == "9-12"
pick_1315 <- studentHeights$`年齡層` == "13-15"
averageHeightByGroup <- c("6-8"=mean(studentHeights$`平均身高`[pick_68]),
"9-12"=mean(studentHeights$`平均身高`[pick_912]),
"13-15"=mean(studentHeights$`平均身高`[pick_1315])
)
averageHeightByGroup
pick_boy <- studentHeights$`類別`["男"]
pick_boy
# heightDifferenceByGroup
pick_boy <- studentHeights$`類別`[["男"]]
pick_boy <- studentHeights$`類別`[c("男")]
pick_boy
# heightDifferenceByGroup
str(studentHeights$類別)
str(studentHeights$類別)
pick_boy <- studentHeights$`類別` == "男"
pick_boy
# heightDifferenceByGroup
pick_boy68 <- studentHeights$`年齡層`[pick_boy] == "6-8"
pick_boy68
str(studentHeights$`類別`)
pick_boy <- studentHeights$`類別` == "男"
pick_girl <- studentHeights$`類別` == "女"
pick_boy68 <- studentHeights$`年齡層`[pick_boy] == "6-8"
pick_boy912 <- studentHeights$`年齡層`[pick_boy] == "9-12"
pick_boy1315 <- studentHeights$`年齡層`[pick_boy] == "13-15"
pick_girl68 <- studentHeights$`年齡層`[pick_girl] == "6-8"
pick_girl912 <- studentHeights$`年齡層`[pick_girl] == "9-12"
pick_girl1315 <- studentHeights$`年齡層`[pick_girl] == "13-15"
heightDifferenceByGroup <- c(mean(studentHeights$`平均身高`[pick_boy68])-mean(studentHeights$`平均身高`[pick_girl68]),mean(studentHeights$`平均身高`[pick_boy912])-mean(studentHeights$`平均身高`[pick_girl912]),
mean(studentHeights$`平均身高`[pick_boy1315])-mean(studentHeights$`平均身高`[pick_girl1315])
)
heightDifferenceByGroup
str(studentHeights$`類別`)
pick_boy <- studentHeights$`類別` == "男"
pick_girl <- studentHeights$`類別` == "女"
pick_boy68 <- studentHeights$`年齡層`[pick_boy] == "6-8"
pick_boy912 <- studentHeights$`年齡層`[pick_boy] == "9-12"
pick_boy1315 <- studentHeights$`年齡層`[pick_boy] == "13-15"
pick_girl68 <- studentHeights$`年齡層`[pick_girl] == "6-8"
pick_girl912 <- studentHeights$`年齡層`[pick_girl] == "9-12"
pick_girl1315 <- studentHeights$`年齡層`[pick_girl] == "13-15"
heightDifferenceByGroup <- c(mean(studentHeights$`平均身高`[pick_boy68]-studentHeights$`平均身高`[pick_girl68]),mean(studentHeights$`平均身高`[pick_boy912]-studentHeights$`平均身高`[pick_girl912]),
mean(studentHeights$`平均身高`[pick_boy1315]-studentHeights$`平均身高`[pick_girl1315])
)
heightDifferenceByGroup
mean(studentHeights$平均身高[pick_boy68])
mean(studentHeights$`平均身高`[pick_boy68])
mean(studentHeights$`平均身高`[pick_girl68])
pick_girl
pick_girl68 <- studentHeights$`年齡層`[pick_girl] == "6-8"
str(studentHeights$`類別`)
pick_boy <- studentHeights$`類別` == "男"
pick_girl <- studentHeights$`類別` == "女"
pick_boy68 <- studentHeights$`年齡層`[pick_boy] == "6-8"
pick_boy912 <- studentHeights$`年齡層`[pick_boy] == "9-12"
pick_boy1315 <- studentHeights$`年齡層`[pick_boy] == "13-15"
pick_girl68 <- studentHeights$`年齡層`[pick_girl] == "6-8"
pick_girl912 <- studentHeights$`年齡層`[pick_girl] == "9-12"
pick_girl1315 <- studentHeights$`年齡層`[pick_girl] == "13-15"
heightDifferenceByGroup <- c("6-8"=mean(studentHeights$`平均身高`[pick_boy68]-studentHeights$`平均身高`[pick_girl68]),"9-12"mean(studentHeights$`平均身高`[pick_boy912]-studentHeights$`平均身高`[pick_girl912]),
str(studentHeights$`類別`)
pick_boy <- studentHeights$`類別` == "男"
pick_girl <- studentHeights$`類別` == "女"
pick_boy68 <- studentHeights$`年齡層`[pick_boy] == "6-8"
pick_boy912 <- studentHeights$`年齡層`[pick_boy] == "9-12"
pick_boy1315 <- studentHeights$`年齡層`[pick_boy] == "13-15"
pick_girl68 <- studentHeights$`年齡層`[pick_girl] == "6-8"
pick_girl912 <- studentHeights$`年齡層`[pick_girl] == "9-12"
pick_girl1315 <- studentHeights$`年齡層`[pick_girl] == "13-15"
heightDifferenceByGroup <- c("6-8"=mean(studentHeights$`平均身高`[pick_boy68]-studentHeights$`平均身高`[pick_girl68]),"9-12"=mean(studentHeights$`平均身高`[pick_boy912]-studentHeights$`平均身高`[pick_girl912]),
"13-15"=mean(studentHeights$`平均身高`[pick_boy1315]-studentHeights$`平均身高`[pick_girl1315])
)
mean(studentHeights$`平均身高`[pick_boy68])
mean(studentHeights$`平均身高`[pick_girl68])
heightDifferenceByGroup
jsonlite::fromJSON("https://www.dropbox.com/s/bp0w8tjgrhi79x7/sameMajorDifferentWritings.json?dl=1") -> differentMajors
differentMajors
realEstateRegex <- "不動[:graph:]+系"
realEstateRegex
str_replace(differentMajors,realEstateRegex,"不動系")
factor(differentMajors) -> differentMajors
levels(differentMajors) -> currentLevels
currentLevels
jsonlite::fromJSON("https://www.dropbox.com/s/bp0w8tjgrhi79x7/sameMajorDifferentWritings.json?dl=1") -> differentMajors
realEstateRegex <- "不動[:graph:]+系"
realEstateRegex
str_replace(differentMajors,realEstateRegex,"不動系")
factor(differentMajors) -> differentMajors
levels(differentMajors) -> currentLevels
currentLevels
realEstateRegex <- "不[:graph:]+系"
realEstateRegex
str_replace(differentMajors,realEstateRegex,"不動系")
factor(differentMajors) -> differentMajors
levels(differentMajors) -> currentLevels
currentLevels
str_replace(differentMajors,realEstateRegex,"不動系")
factor(differentMajors) -> differentMajors
factor(differentMajors) -> differentMajors
differentMajors
str_replace(differentMajors,realEstateRegex,"不動系") -> differentMajors
factor(differentMajors) -> differentMajors
levels(differentMajors)
str_replace(differentMajors,realEstateRegex,"不動系")
str_replace(differentMajors,realEstateRegex,"不動系") -> differentMajors
factor(differentMajors) -> differentMajors
levels(differentMajors) -> currentLevels
currentLevels
bschoolRegex <- "休[:graph:]+系|金[:graph:]+系"
bSchoolRegex
bSchoolRegex <- "休[:graph:]+系|金[:graph:]+系"
bSchoolRegex
str_replace(currentLevels,bSchoolRegex,"商學院")
regex_sport <- "休[:graph:]+系"
str_replace(currentLevels,regex_sport,"休運系")
regex_sport <- "休[:graph:]+系"
str_replace(currentLevels,regex_sport,"休運系")
regex_fin <- "金[:graph:]+系"
str_replace(currentLevels,regex_fin,"金融系")
regex_eco <- "經[:graph:]+系"
str_replace(currentLevels,regex_eco,"經濟系")
regex_soc <- "社會系|社會學系"
str_replace(currentLevels,regex_soc,"社會系")
regex_vol <- "社工系|社會工作學系"
str_replace(currentLevels,regex_vol,"社工系")
regex_pub <- "公[:graph:]+系"
str_replace(currentLevels,regex_pub,"公行系")
differentMajors
regex_sport <- "休[:graph:]+系"
str_replace(currentLevels,regex_sport,"休運系")
regex_sport <- "休[:graph:]+系"
str_replace(currentLevels,regex_sport,"休運系")
regex_fin <- "金[:graph:]+系"
str_replace(currentLevels,regex_fin,"金融系")
str_replace(differentMajors,realEstateRegex,"不動系")
print(differentMajors)
print(differentMajors)
regex_fin <- "金[:graph:]+系"
str_replace(currentLevels,regex_fin,"金融系")
regex_sport <- "休[:graph:]+系"
str_replace(currentLevels,regex_sport,"休運系")
regex_fin <- "金[:graph:]+系"
str_replace(currentLevels,regex_fin,"金融系")
regex_eco <- "經[:graph:]+系"
str_replace(currentLevels,regex_eco,"經濟系")
regex_sport <- "休[:graph:]+系"
str_replace(currentLevels,regex_sport,"休運系") -> currentLevels
regex_fin <- "金[:graph:]+系"
str_replace(currentLevels,regex_fin,"金融系")-> currentLevels
regex_eco <- "經[:graph:]+系"
str_replace(currentLevels,regex_eco,"經濟系")-> currentLevels
regex_soc <- "社會系|社會學系"
str_replace(currentLevels,regex_soc,"社會系")-> currentLevels
regex_vol <- "社工系|社會工作學系"
str_replace(currentLevels,regex_vol,"社工系")-> currentLevels
regex_pub <- "公[:graph:]+系"
str_replace(currentLevels,regex_pub,"公行系")-> currentLevels
differentMajors
regex_sport <- "休[:graph:]+系"
str_replace(currentLevels,regex_sport,"休運系") -> currentLevels
regex_fin <- "金[:graph:]+系"
str_replace(currentLevels,regex_fin,"金融系")-> currentLevels
regex_eco <- "經[:graph:]+系"
str_replace(currentLevels,regex_eco,"經濟系")-> currentLevels
regex_soc <- "社會系|社會學系"
str_replace(currentLevels,regex_soc,"社會系")-> currentLevels
regex_vol <- "社工系|社會工作學系"
str_replace(currentLevels,regex_vol,"社工系")-> currentLevels
regex_pub <- "公[:graph:]+系"
str_replace(currentLevels,regex_pub,"公行系")-> currentLevels
differentMajors <- factor(differentMajors,currentLevels)
differentMajors <- factor(differentMajors,currentLevels)
str_replace(currentLevels,regex_eco,"經濟系")-> currentLevels
currentLevels
differentMajors
differentMajors <- factor(differentMajors,currentLevels)
class(currentLevels)
currentLevels
regex_sport <- "休[:graph:]+系"
str_replace(currentLevels,regex_sport,"休運系") -> currentLevels
regex_fin <- "金[:graph:]+系"
str_replace(currentLevels,regex_fin,"金融系")-> currentLevels
regex_eco <- "經[:graph:]+系"
str_replace(currentLevels,regex_eco,"經濟系")-> currentLevels
regex_soc <- "社會系|社會學系"
str_replace(currentLevels,regex_soc,"社會系")-> currentLevels
regex_vol <- "社工系|社會工作學系"
str_replace(currentLevels,regex_vol,"社工系")-> currentLevels
regex_pub <- "公[:graph:]+系"
str_replace(currentLevels,regex_pub,"公行系")-> newlevels
levels(differentMajors) <- newlevels
differentMajors
newlevels
school <- factor(differentMajors)
regex_b <- "休運系|金融系"
str_replace(newlevels,regex_b,"商學院") -> newlevels
regex_social <- "經濟系|社會系|社工系"
str_replace(newlevels,regex_social,"社科院") ->newlevels
regex_public <- "公行系|不動系"
str_replace(newlevels,regex_public,"公共事務學院") -> truelevels
levels(school) <- truelevels
school
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr);
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
factor(studentHeights$`學年度`,ordered=T) -> studentHeights$`學年度`
as.integer(levels(studentHeights$`學年度`)) -> levelsyear
sort(levelsyear) -> levelsyear
as.character(levelsyear) -> levelsyear
studentHeights$`學年度` <- factor(studentHeights$`學年度`,levelsyear)
factor(studentHeights$`年齡`,ordered = T) -> studentHeights$`年齡`
as.integer(levels(studentHeights$`年齡`)) -> levelsold
sort(levelsold) -> levelsold
levelsold
as.character(levelsold) -> levelsold
studentHeights$`年齡` <- factor(studentHeights$`年齡`,levelsold)
studentHeights$`學年度`
studentHeights
factor(studentHeights$`年齡層`,ordered=T) -> studentHeights$`年齡層`
levels(studentHeights$`年齡層`) -> oldlevel
oldlevel
str_extract(oldlevel,"^[0-9]+") -> levelsolded
as.integer(levelsolded) -> levelsolded
names(levelsolded) <- oldlevel
sort(levelsolded) -> levelsolded
studentHeights$`年齡層` <- factor(studentHeights$`年齡層`,names(levelsolded))
studentHeights$`年齡層`
pick_68 <- studentHeights$`年齡層`=="6-8"
pick_912 <- studentHeights$`年齡層` == "9-12"
pick_1315 <- studentHeights$`年齡層` == "13-15"
averageHeightByGroup <- c("6-8"=mean(studentHeights$`平均身高`[pick_68]),
"9-12"=mean(studentHeights$`平均身高`[pick_912]),
"13-15"=mean(studentHeights$`平均身高`[pick_1315])
)
averageHeightByGroup
str(studentHeights$`類別`)
pick_boy <- studentHeights$`類別` == "男"
pick_girl <- studentHeights$`類別` == "女"
pick_boy68 <- studentHeights$`年齡層`[pick_boy] == "6-8"
pick_boy912 <- studentHeights$`年齡層`[pick_boy] == "9-12"
pick_boy1315 <- studentHeights$`年齡層`[pick_boy] == "13-15"
pick_girl68 <- studentHeights$`年齡層`[pick_girl] == "6-8"
pick_girl912 <- studentHeights$`年齡層`[pick_girl] == "9-12"
pick_girl1315 <- studentHeights$`年齡層`[pick_girl] == "13-15"
heightDifferenceByGroup <- c("6-8"=mean(studentHeights$`平均身高`[pick_boy68]-studentHeights$`平均身高`[pick_girl68]),"9-12"=mean(studentHeights$`平均身高`[pick_boy912]-studentHeights$`平均身高`[pick_girl912]),
"13-15"=mean(studentHeights$`平均身高`[pick_boy1315]-studentHeights$`平均身高`[pick_girl1315])
)
heightDifferenceByGroup
jsonlite::fromJSON("https://www.dropbox.com/s/bp0w8tjgrhi79x7/sameMajorDifferentWritings.json?dl=1") -> differentMajors
realEstateRegex <- "不[:graph:]+系"
realEstateRegex
str_replace(differentMajors,realEstateRegex,"不動系")
str_replace(differentMajors,realEstateRegex,"不動系") -> differentMajors
factor(differentMajors) -> differentMajors
levels(differentMajors) -> currentLevels
currentLevels
bSchoolRegex <- "休[:graph:]+系|金[:graph:]+系"
bSchoolRegex
str_replace(currentLevels,bSchoolRegex,"商學院")
regex_sport <- "休[:graph:]+系"
str_replace(currentLevels,regex_sport,"休運系") -> currentLevels
regex_fin <- "金[:graph:]+系"
str_replace(currentLevels,regex_fin,"金融系")-> currentLevels
regex_eco <- "經[:graph:]+系"
str_replace(currentLevels,regex_eco,"經濟系")-> currentLevels
regex_soc <- "社會系|社會學系"
str_replace(currentLevels,regex_soc,"社會系")-> currentLevels
regex_vol <- "社工系|社會工作學系"
str_replace(currentLevels,regex_vol,"社工系")-> currentLevels
regex_pub <- "公[:graph:]+系"
str_replace(currentLevels,regex_pub,"公行系")-> newlevels
levels(differentMajors) <- newlevels
differentMajors
school <- factor(differentMajors)
regex_b <- "休運系|金融系"
str_replace(newlevels,regex_b,"商學院") -> newlevels
regex_social <- "經濟系|社會系|社工系"
str_replace(newlevels,regex_social,"社科院") ->newlevels
regex_public <- "公行系|不動系"
str_replace(newlevels,regex_public,"公共事務學院") -> truelevels
levels(school) <- truelevels
school
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr);
pick_68 <- studentHeights$`年齡層`=="6-8"
pick <- student$`類別` =="總計"
pick_68 <- studentHeights$`年齡層`=="6-8"
pick <- student$`類別` == "總計"
pick_68 <- studentHeights$`年齡層`=="6-8"
pick <- studentHeights$`類別` == "總計"
pick_912 <- studentHeights$`年齡層` == "9-12"
pick_1315 <- studentHeights$`年齡層` == "13-15"
averageHeightByGroup <- c("6-8"=mean(studentHeights$`平均身高`[pick_68&pick]),
"9-12"=mean(studentHeights$`平均身高`[pick_912&pick]),
"13-15"=mean(studentHeights$`平均身高`[pick_1315&pick])
)
averageHeightByGroup
str(studentHeights$`類別`)
pick_boy <- studentHeights$`類別` == "男"
pick_girl <- studentHeights$`類別` == "女"
heightDifferenceByGroup <- c("6-8"=mean(studentHeights$`平均身高`[pick_68&pick_boy]-studentHeights$`平均身高`[pick_68&pick_girl]),"9-12"=mean(studentHeights$`平均身高`[pick_912&pick_boy]-studentHeights$`平均身高`[pick_girl&pick_912]),
"13-15"=mean(studentHeights$`平均身高`[pick_1315&pick_boy]-studentHeights$`平均身高`[pick_girl&pick_1315])
)
heightDifferenceByGroup
